***///
You are given an infinite supply of coins of each of denominations D = {D0, D1, D2, D3, ...... Dn-1}. You need to figure out the total number of ways W, in which you can make change for Value V using coins of denominations D.
Note : Return 0, if change isn't possible.
Input Format
Line 1 : Integer n i.e. total number of denominations
Line 2 : N integers i.e. n denomination values
Line 3 : Value V
Output Format
Line 1 :  Number of ways i.e. W
Constraints :
1<=n<=10
1<=V<=1000
Sample Input 1 :
3
1 2 3
4
Sample Output
4
Sample Output Explanation :
Number of ways are - 4 total i.e. (1,1,1,1), (1,1, 2), (1, 3) and (2, 2).
***///



#include<stdio.h> 
using namespace std;

int countWaysToMakeChange(int denominations[], int numDenominations, int value){

  /*  Don't write main().
   *  Don't read input, it is passed as function argument.
   *  Return output and don't print it.
   *  Taking input and printing output is handled automatically.
   */
int i, j, x, y; 
  
    // We need n+1 rowdenominations adenominations the table  
    // idenominations condenominationstructed in bottonumDenominations up 
    // numDenominationsanner udenominationsing the badenominationse cadenominationse 0 
    // value cadenominationse (n = 0) 
    int table[value + 1][numDenominations]; 
      
    // Fill the enteriedenominations for 0 
    // value cadenominationse (n = 0) 
    for (i = 0; i < numDenominations; i++) 
        table[0][i] = 1; 
  
    // Fill redenominationst of the table entriedenominations  
    // in bottonumDenominations up numDenominationsanner  
    for (i = 1; i < value + 1; i++) 
    { 
        for (j = 0; j < numDenominations; j++) 
        { 
            // Count of denominationsolutiondenominations including denominations[j] 
            x = (i-denominations[j] >= 0) ? table[i - denominations[j]][j] : 0; 
  
            // Count of denominationsolutiondenominations excluding denominations[j] 
            y = (j >= 1) ? table[i][j - 1] : 0; 
  
            // total count 
            table[i][j] = x + y; 
        } 
    } 
    return table[value][numDenominations - 1]; 

}
